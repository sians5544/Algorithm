function solution(board){
  let answer=0;
  let dx=[-1, 0, 1, 1];
  let dy=[1, 1, 1, 0];
  let pan=Array.from(Array(21), ()=>Array(21).fill(0));  // 1~19 지만 0~20 으로 생성해서 0으로  테두리가 0으로 둘러싸지도록 1~19 인덱스가 진짜 오목판이 되도록 
  for(let i=1; i<=19; i++){
      for(let j=1; j<=19; j++){
          pan[i][j]=board[i-1][j-1];
      }
  }
  for(let i=1; i<=19; i++){
      for(let j=1; j<=19; j++){
          if(pan[i][j]!==0){ // 흰색이랑 검은색일때 
              for(let k=0; k<4; k++){
                  let x=i;
                  let y=j;
                  let cnt=1;
                  if(pan[i-dx[k]][j-dy[k]]!==pan[i][j]){ // 뒷방향에 있는게 같지 않아야하는것  
                      while(true){
                          x=x+dx[k];
                          y=y+dy[k];
                          console.log(`x:${x},y:${y}`);
                          if(pan[x][y]===pan[i][j]) cnt++; // 같은 색의 돌이라면 카운트!!
                          else break;
                      }
                  }
                  if(cnt===5){
                      answer=pan[i][j];
                      return answer;
                  }
              }
          }
      }
  }
  return answer;

}

function solution2(board){

  let answer = 0;
  let pan=Array.from(Array(21), ()=>Array(21).fill(0));  

 for( let i = 1 ; i <=19; i++){
   for(let j = 1; j <=19 ; j++){
    pan[i][j] = board[i-1][j-1];
   }
 }

  let dx = [-1, 0, 1, 1];
  let dy = [ 1, 1, 1, 0];

  // let dx=[-1, 0, 1, 1];
  // let dy=[1, 1, 1, 0];

  for( let i = 1; i <=19; i++){
    for( let j =1; j <=19; j++){
      if(pan[i][j]!==0){
        for( let k = 0; k < 4; k++){

          let nx = i;
          let ny = j; 
          let cnt = 1;
          //console.log(`x:${nx},y:${ny}`);
          // i 와 j의 값을 직접적으로 바꿔서는 안된다 기준이기 때문에 그래서 방향 탐색 용으로 nx, ny을 선언 
          if(pan[i-dx[k]][j-dy[k]] !== pan[i][j]){
            
            while(true){
                nx = nx + dx[k] ;
                ny = ny + dy[k] ;
              console.log(`x:${nx},y:${ny}`);
              if(pan[nx][ny] === pan[i][j] ){
                cnt++;
              }
              else break;
            }
          }
          if(cnt===5){
            answer = pan[i][j];
            return answer;
          }
        }
    }
  }
  }

  return answer;
}



console.log(solution2([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  [0, 1, 2, 0, 0, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])); 

